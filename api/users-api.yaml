openapi: 3.0.0
info:
  title: User Service API
  version: "1.0"
servers:
  - url: http://localhost:9090

tags:
  - name: users

paths:
  /users:
    post:
      summary: Endpoint for user sign up
      operationId: user-sign-up
      tags:
        - users
      requestBody:
        $ref: "#/components/requestBodies/UserSignUpRequest"
      responses:
        "201":
          $ref: "#/components/responses/UserProfileResponse"
        "400":
          description: Invalid input
        "409":
          description: Email already in use
  /users/{userId}:
    get:
      summary: Endpoint for getting user profile info
      tags:
        - users
      operationId: get-user-profile
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/UserProfileResponse"
        "404":
          description: User not found
    delete:
      summary: Delete user profile
      tags:
        - users
      operationId: delete-user-profile
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: User profile has been deleted
        "404":
          description: User not found

components:
  schemas:
    ApiException:
      description: Detailed exception message
      type: object
      properties:
        title:
          type: string
        detail:
          type: string
        inputViolations:
          type: array
          items:
            $ref: '#/components/schemas/InputViolation'
    InputViolation:
      description: Invalid request parameters detailed information
      type: object
      properties:
        field:
          type: string
        message:
          type: string
    UserSignUpRequest:
      description: User sign up request
      type: object
      properties:
        firstName:
          type: string
          minLength: 1
          maxLength: 128
        lastName:
          type: string
          minLength: 1
          maxLength: 128
        email:
          type: string
          minLength: 1
          maxLength: 128
        password:
          type: string
          #          \u005B is unicode for [
          #          \u005D is unicdoe for ]
          pattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!\"#$%&''()*+,-./:;<=>?@[\\]^_`{|}~\u005B\u005D])[A-Za-z\d!\"#$%&''()*+,-./:;<=>?@[\\]^_`{|}~\u005B\u005D]{12,128}$
      required:
        - firstName
        - lastName
        - email
        - password
    UserProfileResponse:
      description: User profile object
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        creationDate:
          type: string

  requestBodies:
    UserSignUpRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserSignUpRequest"
  responses:
    ApiExceptionResponse:
      description: General error message containing detailed information
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiException"
    UserProfileResponse:
      description: User profile response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserProfileResponse"

